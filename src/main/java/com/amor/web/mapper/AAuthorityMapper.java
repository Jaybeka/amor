package com.amor.web.mapper;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

import com.amor.web.model.ALogin;

public interface AAuthorityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table A_AUTHORITY
     *
     * @mbggenerated Mon Sep 05 15:00:17 CST 2016
     */
    @Delete({
        "delete from A_AUTHORITY",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table A_AUTHORITY
     *
     * @mbggenerated Mon Sep 05 15:00:17 CST 2016
     */
    @Insert({
        "insert into A_AUTHORITY (id, persion_id, ",
        "username, password, ",
        "status, login_code, ",
        "login_from)",
        "values (#{id,jdbcType=INTEGER}, #{persionId,jdbcType=INTEGER}, ",
        "#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, ",
        "#{status,jdbcType=VARCHAR}, #{loginCode,jdbcType=VARCHAR}, ",
        "#{loginFrom,jdbcType=VARCHAR})"
    })
    int insert(ALogin record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table A_AUTHORITY
     *
     * @mbggenerated Mon Sep 05 15:00:17 CST 2016
     */
    @Select({
        "select",
        "id, persion_id, username, password, status, login_code, login_from",
        "from A_AUTHORITY",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="persion_id", property="persionId", jdbcType=JdbcType.INTEGER),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="login_code", property="loginCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="login_from", property="loginFrom", jdbcType=JdbcType.VARCHAR)
    })
    ALogin selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table A_AUTHORITY
     *
     * @mbggenerated Mon Sep 05 15:00:17 CST 2016
     */
    @Select({
        "select",
        "id, persion_id, username, password, status, login_code, login_from",
        "from A_AUTHORITY"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="persion_id", property="persionId", jdbcType=JdbcType.INTEGER),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="login_code", property="loginCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="login_from", property="loginFrom", jdbcType=JdbcType.VARCHAR)
    })
    List<ALogin> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table A_AUTHORITY
     *
     * @mbggenerated Mon Sep 05 15:00:17 CST 2016
     */
    @Update({
        "update A_AUTHORITY",
        "set persion_id = #{persionId,jdbcType=INTEGER},",
          "username = #{username,jdbcType=VARCHAR},",
          "password = #{password,jdbcType=VARCHAR},",
          "status = #{status,jdbcType=VARCHAR},",
          "login_code = #{loginCode,jdbcType=VARCHAR},",
          "login_from = #{loginFrom,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(ALogin record);
    
    @Select({
    	"select",
        "id, persion_id, username, password, status, login_code, login_from",
        "from A_AUTHORITY",
        "where username = #{rusername,jdbcType=VARCHAR} and password = #{password,jdbcType=CHAR}"
    })
    ALogin authentication(ALogin record);
}